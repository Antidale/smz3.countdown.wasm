@page "/locations"
@using smz3.countdown.wasm.Services
@inject LocationService LocationService
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<PageTitle>Locations</PageTitle>
<h3>Locations</h3>
<br />
<br />
<TabControl>
    <TabBody Title="Spoiler Location Grouping">
        <div class="border-1 border-primary">
            <br />
            <h4>Spoiler Grouping Summary</h4>
            <p>The Spoiler location grouping exactly mimics all the divisions of the SMZ3 spoiler. Users of Apathyduck's desktop appliction should be aware that this is similar to, but not the same as the Default Areas preset</p>
            <button class="btn btn-success" @onclick="@SaveStandard">Use this grouping</button>
            <br />
            <br />
            @foreach (var locationGroup in LocationService.Locations)
            {
                <h4 style="margin-left: 10px">@locationGroup.Key</h4>
                <div class="container">
                    <div class="row">
                        @foreach (var location in locationGroup.Value)
                        {
                            <div class="col-4">@location</div>
                        }
                    </div>
                </div>
                <br />
            }
        </div>
    </TabBody>
    <TabBody Title="Overworld/Dungeon Grouping">
        <div class="border-1 border-secondary">
            <br />
            <h4>Overworld/Dungeon Grouping Summary</h4>
            <p>This grouping mixes overworld and dungeon areas in ALTTP, somewhat reducing the power of dungeon scouting, but also gaining smaller overworld sections. For Super Metroid, it groups locations similarly to how the VARIA randomizer implements the Full Countdown mode</p>
            <button class="btn btn-success" @onclick="@SaveAlternate">Use this grouping</button>
            <br />
            <br />
            @foreach (var locationGroup in LocationService.AltLocations)
            {
                <h4 style="margin-left: 10px">@locationGroup.Key</h4>
                <div class="container">
                    <div class="row">
                        @foreach (var location in locationGroup.Value)
                        {
                            <div class="col-4">@location</div>
                        }
                    </div>
                </div>
                <br />
            }
        </div>
    </TabBody>
</TabControl>


@code {
    private const string Spoiler = "Spoiler";
    private const string Alternate = "Alternate";

    private async Task SaveStandard()
    {
        await SaveSelection(Spoiler);
    }

    private async Task SaveAlternate()
    {
        await SaveSelection(Alternate);
    }

    private async Task SaveSelection(string groupingName)
    {
        await localStorage.SetItemAsStringAsync("GroupingMode", groupingName);
    }
}
